<?php

//namespace Drupal\survey_webforms\Validate;

use Drupal\Core\Field\FieldException;
use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\Entity\Webform;
use Drupal\webform\WebformSubmissionForm;
use Drupal\webform\WebformSubmissionInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Request;




/**
 * Implements hook_ENTITY_TYPE_prepare_form().
 */
function survey_webforms_webform_submission_prepare_form(WebformSubmissionInterface $webform_submission, $operation, FormStateInterface $form_state) {
   
   
     // Only execute the below code if we are editing a submission.
     if ($operation != 'edit') {
       return;
     }
    
    $sections[1] = 'foundational_questions';
    $sections[2] = 'user_information';
    $sections[3] = 'tenant_information';
    $sections[4] = 'monitoring_tools_';
    $sections[5] = 'orchestration_information_';
    
    $user_id = \Drupal::currentUser()->id();
    $user_roles = \Drupal::currentUser()->getRoles();
    $user_entity = \Drupal::entityTypeManager()->getStorage('user')->load($user_id);
    $current_path = \Drupal::request()->getRequestUri();
    $args = explode('/', $current_path);
    $cur_url =  explode('&', $args[1]);
    $page_no = substr($cur_url[0],-1);
   
    $current_wizard = $webform_submission->getCurrentPage();
    //$current_page_no = $sections[$current_wizard];

    if(in_array( 'concierto_wizard', $user_roles)) {
         $page = $sections[$page_no];
         $webform = $webform_submission->getWebform();
         $webform_pages = $webform->getPages();
         $webform_submission->setCurrentPage($page)->save();
         $webform_submission->setCurrentPage($page);
         $webform->setSetting('wizard_progress_link', FALSE);
    } else if(in_array( 'concierto_kyndry', $user_roles)) {
         if(!empty($page_no)) {
         $page = $sections[$page_no];
         $webform = $webform_submission->getWebform();
         //$webform_submission->set('in_draft', TRUE)->save();
         //$webdata = $webform_submission->getTokenUrl();
         //$token = $webdata->getOptions()['query']['token'];
         //$form_object = $form_state->getFormObject();
         //$webform_submissions = $form_object->getEntity();
        // $webform_submissions->setCurrentPage($page);
        // $webform_submissions->setCurrentPage($page);

         //$form['#disable_inline_form_errors_summary'] = TRUE
        }
    }
}



/**
 * Implements hook_webform_submission_form_alter(). webform_submission_tenant_onboarding_form
 */
function survey_webforms_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  
 if ($form_id !== 'webform_submission_onboarding_form' && $form_id !== 'webform_submission_onboarding_node_76_add_form'  && $form_id !== 'webform_submission_onboarding_node_76_edit_form') {
     return;
}

  $clicked_name =  $form_state->getTriggeringElement()['#id'];

if( $clicked_name == 'edit-wizard-next' || $clicked_name == 'edit-actions-wizard-next') { 
  // The following line is only needed if you allow drafts (manual or auto-save).
 _survey_webforms_onboarding_wizard_submit_page($form, $form_state);
  $form['actions']['wizard_next']['#submit'][] = '_survey_webforms_onboarding_wizard_submit_page';
  
  } else if( $clicked_name == 'edit-draft' || $clicked_name == 'edit-actions-draft') {
       // The following line is only needed if you allow drafts (manual or auto-save).
       _survey_webforms_onboarding_wizard_draft_page($form, $form_state);
       $form['actions']['draft']['#submit'][] = '_survey_webforms_onboarding_wizard_draft_page';
 }else if ($clicked_name == 'edit-submit' || $clicked_name == 'edit-actions-submit') {
     // The following line is only needed if you allow drafts (manual or auto-save).
       _survey_webforms_onboarding_wizard_full_submit_page($form, $form_state);
       $form['actions']['submit']['#submit'][] = '_survey_webforms_onboarding_wizard_full_submit_page';
 }
}

function _survey_webforms_onboarding_wizard_submit_page(array &$form, FormStateInterface $form_state) {
   /** @var \Drupal\webform\WebformSubmissionForm $form_object */
    $form_object = $form_state->getFormObject();
  /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
    $webform_submission = $form_object->getEntity();
    $webform = $webform_submission->getWebform();
    $webform_submission->set('in_draft', TRUE);
    $webform_submission->save();

    $webform_submissions = $form_object->getEntity();
    $webform = $webform_submissions->getWebform();    
    $current_wizard = $webform_submissions->getCurrentPage();
    if($current_wizard == 'user_information'  ){
       $current_wizard = 'foundational_questions' ;
    }else if($current_wizard == 'tenant_information') {
       $current_wizard = 'user_information' ;
    }else if($current_wizard == 'monitoring_tools_') {
       $current_wizard = 'tenant_information' ;
    }else if($current_wizard == 'orchestration_information_') {
       $current_wizard = 'monitoring_tools_'; 
    }
    $sid = $webform_submissions->id();
    $current_data = $webform_submissions->getData();
  
    if($current_wizard == 'foundational_questions') {
        $tot_elements = 10;
        $filled = 0;
        $filled_values = array();
        $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0); 
        foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
            }
        }
   $per = floor(($filled / $tot_elements) * 10);
   $query = \Drupal::database()->update('survey_form');
  $query->fields([
    'is_completed' => $per,
  ]);
  $query->condition('sid', $sid);
  $query->condition('section_no', 1);
  $query->execute();
 
    } else if($current_wizard == 'user_information') {
        
        $current_page_element = $form['elements'][$current_wizard]['user_details_flexbox']['user_details']['#element'] ;
        $elements = array_keys($current_page_element);
        $tot_elements = count($elements) - 2 ;
        $filled = 0;
        $filled_values = array();
        foreach($elements as $key => $val) {
            if(!empty($current_data['user_details'][0][$val])) {
              $filled_values[$val] =  $current_data['user_details'][0][$val];
              $filled++;
            }
        }
   $filled = $filled > 5 ? 5 : $filled;
   $per = floor(($filled / $tot_elements) * 10);

  $query = \Drupal::database()->update('survey_form');
  $query->fields([
    'is_completed' => $per,
  ]);
  $query->condition('sid', $sid);
  $query->condition('section_no', 2);
  $query->execute();
    }else if($current_wizard == 'tenant_information') {
        $filled = 1;
        $filled_values = array();
        $value = $webform_submissions->getElementData('cloud_solutions');
       if(count($value) == 2) {
            $tot_elements = 16;
            $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0); 
         foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
            } else if(!empty($current_data['tenant_aws_details'][0][$val])) {
               $filled_values[$val] =  $current_data['tenant_aws_details'][0][$val];
               $filled++;
            }else if(!empty($current_data['azure_cloud_information'][0][$val])) {
               $filled_values[$val] =  $current_data['azure_cloud_information'][0][$val];
               $filled++;
            }
          }
        } else if($value[0] == 'Amazon Web Services') {
            $current_page_element = $form['elements'][$current_wizard]['aws_tenant_details']['tenant_aws_details']['#element'] ;
            $elements = array_keys($current_page_element);
            $tot_elements = count($elements) -1;
            foreach($elements as $key => $val) {
            if(!empty($current_data['tenant_aws_details'][0][$val])) {
              $filled_values[$val] =  $current_data['tenant_aws_details'][0][$val];
              $filled++;
             }
            }
        
        } else {
            $current_page_element = $form['elements'][$current_wizard]['azure_tenant_details']['azure_cloud_information']['#element'] ;
            $elements = array_keys($current_page_element);
            $tot_elements = count($elements) -1;
            foreach($elements as $key => $val) {
            if(!empty($current_data['azure_cloud_information'][0][$val])) {
              $filled_values[$val] =  $current_data['azure_cloud_information'][0][$val];
              $filled++;
             }
            }        
        }
        $per = floor(($filled / $tot_elements) * 10);
        $query = \Drupal::database()->update('survey_form');
        $query->fields([
            'is_completed' => $per,
        ]);
        $query->condition('sid', $sid);
        $query->condition('section_no', 3);
        $query->execute();
    } else if($current_wizard == 'monitoring_tools_') {
        $filled = 1;
        $filled_values = array();
        $selectedvalues = $webform_submissions->getElementData('mmonitoring_solution_in_use');
        $tot_elements = count($selectedvalues) *6 + 5;
      
        $current_page_element = _survey_webforms_get_all_questions($current_wizard, 1);
        foreach($selectedvalues as $key => $val) {
            foreach($current_page_element as $k => $v) {
            if($val == 'AWS Cloudwatch') {
                 if(!empty($current_data[$v])) {
                     $filled_values[$v] =  $current_data[$v];
                     $filled++;
                 }
             } else  if($val == 'Azure Monitor') {
                if(!empty($current_data['azure_'.$v])) {
                     $filled_values['azure_'.$v] =  $current_data['azure_'.$v];
                     $filled++;
                 } 
             }  else  if($val == 'Status Cake') {
                if(!empty($current_data['cake_'.$v])) {
                     $filled_values['cake_'.$v] =  $current_data['cake_'.$v];
                     $filled++;
                 } 
             } else {
                 $val = str_replace(' ', '', $val);
                if(!empty($current_data[strtolower($val).'_'.$v])) {
                    $filled_values[strtolower($val).'_'.$v] =  $current_data[strtolower($val).'_'.$v];
                    $filled++;
                 }  
             }  
            }
        }

         $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0);
          foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
             }
            }
     
        $per = floor(($filled / $tot_elements) * 10);

        $query = \Drupal::database()->update('survey_form');
        $query->fields([
              'is_completed' => $per,
           ]);
        $query->condition('sid', $sid);
        $query->condition('section_no', 4);
        $query->execute();
    } 



}

function _survey_webforms_onboarding_wizard_prev_page(array &$form, FormStateInterface $form_state) {
    /** @var \Drupal\webform\WebformSubmissionForm $form_object */
    $form_object = $form_state->getFormObject();
   /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
     $webform_submission = $form_object->getEntity();
    $webform = $webform_submission->getWebform();
    $webform_submission->set('in_draft', TRUE);
    $webform_submission->save();

}

function _survey_webforms_onboarding_wizard_full_submit_page(array &$form, FormStateInterface $form_state) {

  /** @var \Drupal\webform\WebformSubmissionForm $form_object */
    $form_object = $form_state->getFormObject();
    //$webform->setSetting('wizard_progress_link', FALSE);
    $webform_submissions = $form_object->getEntity();
    $webform = $webform_submissions->getWebform();
    $current_wizard = 'orchestration_information_';
    $sid = $webform_submissions->id();
    $current_data = $webform_submissions->getData();

    
    if($current_wizard == 'orchestration_information_') {
        $filled = 1;
        $filled_values = array();
        $value = $webform_submissions->getElementData('orchestration_platform');
         if(count($value) == 2) {
            $tot_elements = 6;
            $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0); 
        } else if($value[0] == 'Windows') {
             $tot_elements = 3;
             $current_page_element = _survey_webforms_get_all_questions($current_wizard, 1); 
        } else {
             $tot_elements = 4;
             $current_page_element = _survey_webforms_get_all_questions($current_wizard, 2); 
        }
         foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
             }
            }
         $per = floor(($filled / $tot_elements) * 10);

         $query = \Drupal::database()->update('survey_form');
         $query->fields([
              'is_completed' => $per,
           ]);
         $query->condition('sid', $sid);
         $query->condition('section_no', 5);
         $query->execute();
      }
   
}

function _survey_webforms_onboarding_wizard_draft_page(array &$form, FormStateInterface $form_state) {

   /** @var \Drupal\webform\WebformSubmissionForm $form_object */
    $form_object = $form_state->getFormObject();
    //$webform->setSetting('wizard_progress_link', FALSE);
    $webform_submissions = $form_object->getEntity();
    $webform = $webform_submissions->getWebform();

    $webform_pages = $webform->getPages();
    $current_wizard = $webform_submissions->getCurrentPage();
    $sid = $webform_submissions->id();
    $current_data = $webform_submissions->getData();
    
         
  
    if($current_wizard == 'foundational_questions') {
        $tot_elements = 10;
        $filled = 0;
        $filled_values = array();
        $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0); 
        foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
            }
        }
   $per = floor(($filled / $tot_elements) * 10);
   $query = \Drupal::database()->update('survey_form');
  $query->fields([
    'is_completed' => $per,
  ]);
  $query->condition('sid', $sid);
  $query->condition('section_no', 1);
  $query->execute();
 
    } else if($current_wizard == 'user_information') {
        
        $current_page_element = $form['elements'][$current_wizard]['user_details_flexbox']['user_details']['#element'] ;
        $elements = array_keys($current_page_element);
        $tot_elements = count($elements) - 2 ;
        $filled = 0;
        $filled_values = array();
        foreach($elements as $key => $val) {
            if(!empty($current_data['user_details'][0][$val])) {
              $filled_values[$val] =  $current_data['user_details'][0][$val];
              $filled++;
            }
        }
   $filled = $filled > 5 ? 5 : $filled;
   $per = floor(($filled / $tot_elements) * 10);

  $query = \Drupal::database()->update('survey_form');
  $query->fields([
    'is_completed' => $per,
  ]);
  $query->condition('sid', $sid);
  $query->condition('section_no', 2);
  $query->execute();
    }else if($current_wizard == 'tenant_information') {
        $filled = 1;
        $filled_values = array();
        $value = $webform_submissions->getElementData('cloud_solutions');
       if(count($value) == 2) {
            $tot_elements = 16;
            $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0); 
         foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
            } else if(!empty($current_data['tenant_aws_details'][0][$val])) {
               $filled_values[$val] =  $current_data['tenant_aws_details'][0][$val];
               $filled++;
            }else if(!empty($current_data['azure_cloud_information'][0][$val])) {
               $filled_values[$val] =  $current_data['azure_cloud_information'][0][$val];
               $filled++;
            }
          }
        } else if($value[0] == 'Amazon Web Services') {
            $current_page_element = $form['elements'][$current_wizard]['aws_tenant_details']['tenant_aws_details']['#element'] ;
            $elements = array_keys($current_page_element);
            $tot_elements = count($elements) - 1;
            foreach($elements as $key => $val) {
            if(!empty($current_data['tenant_aws_details'][0][$val])) {
              $filled_values[$val] =  $current_data['tenant_aws_details'][0][$val];
              $filled++;
             }
            }
           } else {
             $current_page_element = $form['elements'][$current_wizard]['azure_tenant_details']['azure_cloud_information']['#element'] ;
            $elements = array_keys($current_page_element);
            $tot_elements = count($elements) - 1;
            foreach($elements as $key => $val) {
            if(!empty($current_data['azure_cloud_information'][0][$val])) {
              $filled_values[$val] =  $current_data['azure_cloud_information'][0][$val];
              $filled++;
             }
            }        
        }
        $per = floor(($filled / $tot_elements) * 10);
        $query = \Drupal::database()->update('survey_form');
        $query->fields([
            'is_completed' => $per,
        ]);
        $query->condition('sid', $sid);
        $query->condition('section_no', 3);
        $query->execute();
    } else if($current_wizard == 'monitoring_tools_') {
        $filled = 1;
        $filled_values = array();
        $selectedvalues = $webform_submissions->getElementData('mmonitoring_solution_in_use');
        $tot_elements = count($selectedvalues) *6 + 5;
      
        $current_page_element = _survey_webforms_get_all_questions($current_wizard, 1);
        foreach($selectedvalues as $key => $val) {
            foreach($current_page_element as $k => $v) {
            if($val == 'AWS Cloudwatch') {
                 if(!empty($current_data[$v])) {
                     $filled_values[$v] =  $current_data[$v];
                     $filled++;
                 }
             } else  if($val == 'Azure Monitor') {
                if(!empty($current_data['azure_'.$v])) {
                     $filled_values['azure_'.$v] =  $current_data['azure_'.$v];
                     $filled++;
                 } 
             }  else  if($val == 'Status Cake') {
                if(!empty($current_data['cake_'.$v])) {
                     $filled_values['cake_'.$v] =  $current_data['cake_'.$v];
                     $filled++;
                 } 
             } else {
                 $val = str_replace(' ', '', $val);
                if(!empty($current_data[strtolower($val).'_'.$v])) {
                    $filled_values[strtolower($val).'_'.$v] =  $current_data[strtolower($val).'_'.$v];
                    $filled++;
                 }  
             }  
            }
        }

         $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0);
          foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
             }
            }
     
        $per = floor(($filled / $tot_elements) * 10);

        $query = \Drupal::database()->update('survey_form');
        $query->fields([
              'is_completed' => $per,
           ]);
        $query->condition('sid', $sid);
        $query->condition('section_no', 4);
        $query->execute();
    } else if($current_wizard == 'orchestration_information_') {
        $filled = 1;
        $filled_values = array();
        $value = $webform_submissions->getElementData('orchestration_platform');

         if(count($value) == 2) {
            $tot_elements = 6;
            $current_page_element = _survey_webforms_get_all_questions($current_wizard, 0); 
        } else if($value[0] == 'Windows') {
             $tot_elements = 3;
             $current_page_element = _survey_webforms_get_all_questions($current_wizard, 1); 
        } else {
             $tot_elements = 4;
             $current_page_element = _survey_webforms_get_all_questions($current_wizard, 2); 
        }
         foreach($current_page_element as $key => $val) {
            if(!empty($current_data[$val])) {
              $filled_values[$val] =  $current_data[$val];
              $filled++;
             }
            }
         $per = floor(($filled / $tot_elements) * 10);

         $query = \Drupal::database()->update('survey_form');
         $query->fields([
              'is_completed' => $per,
           ]);
         $query->condition('sid', $sid);
         $query->condition('section_no', 5);
         $query->execute();
      }

}



/**
 * Implements hook_mail().
 */
function survey_webforms_mail($key, &$message, $params) {
  $options = array(
    'langcode' => $message['langcode'],
  );

  switch ($key) {
   
   case 'sent_transferemail':
        
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['subject'] = 'An administrator created an account for you at Concierto.cloud';


      $message_list = $params['payload'];

      $message_list['linkedin'] = 'https://www.trianz.com/themes/trianz_beta/images/email_templates/linkedin.png';
      $message_list['facebook'] = 'https://www.trianz.com/themes/trianz_beta/images/email_templates/facebook.png';
      $message_list['twitter'] = 'https://www.trianz.com/themes/trianz_beta/images/email_templates/twitter.png';
      $message_list['banner_image'] = 'https://www.trianz.com/imageassets/concierto-images/cc-kyndryl.png'; //'http://stg.concierto.cloud/themes/concierto/images/cc-kyndryl.png';

      $message_list['raw_data'] = json_encode($params['payload']);
      //$message['headers']['Cc'] = 'rashmi.prajapati@trianz.com';
      $body_data = array(
        '#theme' => 'transferemail',
        '#mail_data' => $message_list,
      );
      $message['body'][] = \Drupal::service('renderer')->render($body_data);

      break;
  }
}


function survey_webforms_theme($existing, $type, $theme, $path) {
  return [
    
      'transferemail' => array(
      'variables' => array('mail_data' => []),
    ),
 'surveyform' => [
      'render element' => 'form',
      'template' => 'surveyform',
    ],
 'createuserform' => [
      'render element' => 'form',
      'template' => 'createuserform',
    ],

  ];
}





function _survey_webforms_get_all_questions($page, $options) {
          switch ($page) {
    
             case 'foundational_questions':
                $questions = array('organization_name','org_short_name','address', 'city', 'zipcode', 'contact_phone', 'contact_email', 'primary_contact', 'primary_email', 'country'); 
                return $questions;
                break;
             case 'user_information':
                $questions = array('prefered_username','user_first_name','user_last_name', 'user_mobile', 'user_email'); 
                return $questions;
                break;
             case 'tenant_information':
                if($options == 0) {
                       $questions = array('tenant_url','tenant_name','username', 'password', 'regions','tenant_url','tenant_name', 'password', 'username', 'regions', 'azure_client_id', 'azure_client_tenant_id', 'azure_client_secret', 'accesskeyid_aws', 'secretaccesskey_aws');                
                   } else {
                    $questions = array('tenant_url_aws','tenant_name_azure', 'password_azure', 'username_azure', 'azure_regions', 'client_id_azure_', 'client_tenant_id_azure', 'client_secret_azure'); 
                }
                 return $questions;
                break;
             case 'monitoring_tools_':
                 if($options == 0) {
                    $questions = array('domain_url','username_sr','password_sr', 'bidirectional'); 
                 } else {
                    $questions = array('monitoring_app_access_url','moonitoring_username','moonitoring_password', 'common_point_of_contact', 'common_poc_email', 'existing_rules'); 
                 }
                return $questions;
                break;
            case 'orchestration_information_':
                if($options == 0) {
                 $questions = array('windows_domain_account_username_local_admin_','windows_password','linux_proxy_baston_host_information','linux_service_account', 'linux_ssh_key_passphrase_if_any'); 
                } else if($options == 1) {
                    $questions = array( 'windows_domain_account_username_local_admin_','windows_password'); 
                } else {
                    $questions = array('linux_proxy_baston_host_information','linux_service_account', 'linux_ssh_key_passphrase_if_any'); 
                }
                return $questions;
                break;
           }
      }
